/* tslint:disable */
/* eslint-disable */
/**
 * server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Loglevel } from './Loglevel';
import {
    LoglevelFromJSON,
    LoglevelFromJSONTyped,
    LoglevelToJSON,
} from './Loglevel';

/**
 * 
 * @export
 * @interface Log
 */
export interface Log {
    /**
     * 
     * @type {any}
     * @memberof Log
     */
    additionalData?: any;
    /**
     * 
     * @type {string}
     * @memberof Log
     */
    controllerName?: string;
    /**
     * 
     * @type {Loglevel}
     * @memberof Log
     */
    level: Loglevel;
    /**
     * 
     * @type {any}
     * @memberof Log
     */
    message?: any;
    /**
     * 
     * @type {string}
     * @memberof Log
     */
    requestId: string;
    /**
     * 
     * @type {string}
     * @memberof Log
     */
    serviceName?: string;
    /**
     * 
     * @type {Date}
     * @memberof Log
     */
    time: Date;
    /**
     * 
     * @type {string}
     * @memberof Log
     */
    title: string;
}

/**
 * Check if a given object implements the Log interface.
 */
export function instanceOfLog(value: object): boolean {
    if (!('level' in value)) return false;
    if (!('requestId' in value)) return false;
    if (!('time' in value)) return false;
    if (!('title' in value)) return false;
    return true;
}

export function LogFromJSON(json: any): Log {
    return LogFromJSONTyped(json, false);
}

export function LogFromJSONTyped(json: any, ignoreDiscriminator: boolean): Log {
    if (json == null) {
        return json;
    }
    return {
        
        'additionalData': json['additional_data'] == null ? undefined : json['additional_data'],
        'controllerName': json['controller_name'] == null ? undefined : json['controller_name'],
        'level': LoglevelFromJSON(json['level']),
        'message': json['message'] == null ? undefined : json['message'],
        'requestId': json['request_id'],
        'serviceName': json['service_name'] == null ? undefined : json['service_name'],
        'time': (new Date(json['time'])),
        'title': json['title'],
    };
}

export function LogToJSON(value?: Log | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'additional_data': value['additionalData'],
        'controller_name': value['controllerName'],
        'level': LoglevelToJSON(value['level']),
        'message': value['message'],
        'request_id': value['requestId'],
        'service_name': value['serviceName'],
        'time': ((value['time']).toISOString()),
        'title': value['title'],
    };
}

